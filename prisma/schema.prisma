generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EstadoConvenio {
  Borrador
  Activo
  Finalizado
  Archivado
}

enum RolUsuario {
  ADMIN
  GESTOR
  CONSULTOR
}

model Convenio {
  id           Int              @id @default(autoincrement())
  nombre       String
  descripcion  String
  fechaInicio  DateTime
  fechaFin     DateTime
  estado       EstadoConvenio   @default(Borrador)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  partes       ConvenioParte[]
}

model Parte {
  id          Int              @id @default(autoincrement())
  nombre      String           @unique
  contacto    String?
  tipo        String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  convenios   ConvenioParte[]
}

model ConvenioParte {
  convenioId  Int
  parteId     Int
  convenio    Convenio @relation(fields: [convenioId], references: [id], onDelete: Cascade)
  parte       Parte    @relation(fields: [parteId], references: [id], onDelete: Cascade)

  @@id([convenioId, parteId])
}

// Modelo User para autenticación - Optimizado para O(log n) en búsquedas
model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique // Índice único para búsquedas O(log n)
  password  String      // Hash bcrypt para seguridad
  rol       RolUsuario  @default(CONSULTOR)
  isActive  Boolean     @default(true)
  lastLogin DateTime?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Índices para optimizar consultas frecuentes
  @@index([email])
  @@index([rol])
  @@index([isActive])
  @@map("users")
}
